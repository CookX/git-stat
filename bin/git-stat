#!/usr/bin/env node

/**
 * Git 代码行数统计（以人为维度）
 * todo: 支持分支切换
 */

const fs = require('fs')
const program = require('commander')
const getConfig = require('../libs/getConfig')
const fetchRepo = require('../libs/fetchRepo')
const codeStat = require('../libs/codeStat')

/**
 * Usage
 */
// gitstat --help，命令列表
program
  .version(require('../package').version)
  .usage('<git-repo-name/config> <dest-name>')
  .option('--since [value]', 'config start date, YYYY-MM-DD')
  .option('--until [value]', 'config end date, YYYY-MM-DD')
  .option('-ui', 'create a server to do visual operation')
  .parse(process.argv)

/**
 * Settings
 * 从配置读取代码仓库、开始日期、结束日期、输出文件等信息
 */
const config = getConfig(program)

fs.writeFileSync(config.distFile, '# 代码提交量统计\n## 详情')

/**
 * 代码行数总计（以人为维度统计）
 */
var totalStatObj = {'## 汇总': {}}

// 循环获取git代码提交情况
config.repositories.forEach((item, index) => {
  const repoPath = fetchRepo(item.address, item.branch)

  // 统计代码原始结果对象
  const statData = codeStat(repoPath.localRepoPath, config.startDate, config.endDate)

	// 组装对象
	const distObj = {}
	distObj[repoPath.repoName] = statData

	// 打印输出
	dist(distObj)

	// 生成总计对象
	Object.keys(statData).forEach(element => {
		if (!totalStatObj['## 汇总'][element]) {
			totalStatObj['## 汇总'][element] = [0, 0, 0]
		}
		totalStatObj['## 汇总'][element][0] += statData[element][0] || 0
		totalStatObj['## 汇总'][element][1] += statData[element][1] || 0
		totalStatObj['## 汇总'][element][2] += statData[element][2] || 0
	})

	// 重置&清理
	// execSync(`rm -rf ${localRepoPath}`)
})

/**
 * 输出每人代码总行数
 */
dist(totalStatObj)

// 打印输出md
function dist (obj) {
	for (let key in obj) {
		// 打印当前项目统计
		fs.appendFileSync(config.distFile, `\n${key}：\n` +
		'user name | added lines | removed lines | total lines\n' +
		'---- | --- | --- | ---\n')

		Object.keys(obj[key]).forEach(element => {
			// 去除提交量为0的
			if (obj[key][element][0] === obj[key][element][1]  && obj[key][element][1] === obj[key][element][2] && obj[key][element][0] === 0) return
			fs.appendFileSync(config.distFile, `${element} | ${obj[key][element][0] || 0} | ${obj[key][element][1] || 0} | ${obj[key][element][2] || 0}\n`)
		})
	}
}